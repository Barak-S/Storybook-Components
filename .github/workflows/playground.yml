name: Playground
on:
  - workflow_dispatch
env:
  SLACK_ENABLED: true
  SLACK_USERNAME: Github Actions
  SLACK_AVATAR: sender
  SLACK_LOG_WEBHOOK: ${{ secrets.SLACK_LOG_DEV_WEBHOOK }}
  SLACK_NOTES_WEBHOOK: ${{ secrets.SLACK_LOG_DEV_WEBHOOK }}
  AWS_ASSETS_BUCKET: do-webapp-assets
  AWS_ASSETS_URL: http://do-webapp-assets.s3-website.us-east-2.amazonaws.com
jobs:
  playground:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: "Env: set package version"
        run: >
          echo "APP_VERSION=$(cat package.json | grep version | head -1 | awk
          -F: '{ print $2 }' | sed 's/[",\t ]//g')" >> $GITHUB_ENV
      - name: "Env: setup DEV environment"
        run: |
          cat .env.dev > .env
          cat .env >> $GITHUB_ENV
      - name: "AWS: Configure"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: "Yarn: install"
        run: yarn install
      - name: "Tests: build"
        run: "yarn test:coverage"
      - name: "Storybook: build"
        run: "yarn storybook:build"
      - name: "Storybook: upload"
        run: |
          ASSET_ID=$(openssl rand -hex 10)
          aws s3 sync --acl public-read --follow-symlinks --delete ./storybook-static s3://$AWS_ASSETS_BUCKET/$ASSET_ID
          ASSET_URL="$AWS_ASSETS_URL/$ASSET_ID"
          echo "STORYBOOK_URL=$ASSET_URL" >> $GITHUB_ENV
      - name: "Slack: storybook"
        if: ${{ env.SLACK_ENABLED == 'true' }}
        uses: Ilshidur/action-slack@master
        env:
          SLACK_WEBHOOK: ${{ env.SLACK_LOG_WEBHOOK }}
        with:
          args: ":control_knobs: ${{ env.APP_ENV_EMOJI }} :art: `v${{ env.APP_VERSION }}`: Storybook has been uploaded\n${{ env.STORYBOOK_URL }}"
      - name: "Tests: upload coverage"
        run: |
          ASSET_ID=$(openssl rand -hex 10)
          aws s3 sync --acl public-read --follow-symlinks --delete ./coverage/lcov-report s3://$AWS_ASSETS_BUCKET/$ASSET_ID
          ASSET_URL="$AWS_ASSETS_URL/$ASSET_ID"
          echo "TEST_COVERAGE_URL=$ASSET_URL" >> $GITHUB_ENV
      - name: "Slack: tests coverage"
        if: ${{ env.SLACK_ENABLED == 'true' }}
        uses: Ilshidur/action-slack@master
        env:
          SLACK_WEBHOOK: ${{ env.SLACK_LOG_WEBHOOK }}
        with:
          args: ":control_knobs: ${{ env.APP_ENV_EMOJI }} :test_tube: `v${{ env.APP_VERSION }}`: Tests coverage has been uploaded\n${{ env.TEST_COVERAGE_URL }}"
